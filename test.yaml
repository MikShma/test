---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: task-pv-volume 
  labels:
    type: local
spec:
  storageClassName: manual 
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce 
  hostPath:
    path: "/mnt/data" 
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: mongodb-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: book-store-mongodb
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: book-store-mongodb
    spec:
      containers:
        - name: mongodb
          image: 'mongo:latest'
          ports:
            - containerPort: 27017
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 27017
          imagePullPolicy: Always
      restartPolicy: Always

---
kind: Service
apiVersion: v1
metadata:
  name: mongodb-service
  namespace: default
  labels:
    app: book-store-mongodb
spec:
  ports:
    - name: elb-port2
      protocol: TCP
      port: 27017
      targetPort: 27017
  selector:
    app: book-store-mongodb
  clusterIP: 172.25.213.162
  type: ClusterIP
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: book-store
  generation: 1
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: book-store
  template:
    metadata:
      labels:
        app: book-store
    spec:
      containers:
        - name: book-store
          image: 'mshmatko/book-app:v1'
          ports:
            - containerPort: 3000
              protocol: TCP
          imagePullPolicy: Always
          env:
            - name: TEST_MONGO
              value:  mongodb-service
            - name: TEST_TEST
              value: test-serv
  
---
kind: Service
apiVersion: v1
metadata:
  name: book-store
  labels:
    app: book-store
spec:
  ports:
    - name: elb-port
      protocol: TCP
      port: 80
      targetPort: 3000
  selector:
    app: book-store
  clusterIP: 172.25.15.148
  type: ClusterIP
 
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: book-store
  namespace: default
  labels:
    app: book-store
spec:
  path: /books
  to:
    kind: Service
    name: book-store
    weight: 100
  port:
    targetPort: elb-port


---
kind: Service
apiVersion: v1
metadata:
  name: mongobk-serv
  namespace: default
  labels:
    app: mongobk
spec:
  ports:
    - name: elb-port2
      protocol: TCP
      port: 27017
      targetPort: 27017
  selector:
    app: mongobk
  type: ClusterIP
  
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: task-pvc-volume
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: manual

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: example
  namespace: default
spec:
  schedule: '*/2 * * * *'
  jobTemplate:
    spec:
      replicas: 1
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: mongobk
        spec:
          volumes:
            - name: save-path
              persistentVolumeClaim:
                claimName: task-pvc-volume
          containers:
            - name: mongobk
              image: 'mshmatko/mongobk:latest'
              volumeMounts:
               - mountPath: /backup
                 name: save-path
              env:
                - name: MONGO_SERVICE
                  value:  mongodb-service
              ports:
                - containerPort: 27017
                  protocol: TCP
              readinessProbe:
                tcpSocket:
                  port: 27017
              imagePullPolicy: Always
              command:
                - "/mongo_backup.sh"
          restartPolicy: Never
